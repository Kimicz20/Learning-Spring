<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context     
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 引入外部属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 配置C3P0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>


	<!-- 配置业务层 -->
	<bean id="accountService" class="com.kimi.spring_transation.Impl.AccountServiceImpl">
	</bean>

	<!-- 配置DAO层 -->
	<bean id="accountDao" class="com.kimi.spring_transation.Impl.AccountDaoImpl">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 事务管理控制器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 1.编程式事务管理 -->
	<!-- 事务模板类 -->
	<!--
	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	-->
	<!-- 2.申明式事务管理 -->
	<!-- 2.1 通过代理方式 -->  
	<!--  <bean id="accountServiceProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		 配置目标对象 
		<property name="target" ref="accountService"></property>
		注入事务管理器 
		<property name="transactionManager" ref="transactionManager" />
		 注入事务属性
		<property name="transactionAttributes">
			<props>
				
					prop格式
						PROPAGATION	:事务的传播行为
						IOSLATION	:事务的隔离级别
						readOnly	:只读 不可进行修改插入删除
						-Exception	:发生哪些异常回滚事务
						+Exception	:发生哪些异常不回滚事务
				
				<prop key="transfer">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	-->
	<!-- 2.2  通过AspectJ xml配置方式 -->
	<!-- 配置通知
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="transfer" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	 配置切面
	<aop:config>
		 配置切点 
		<aop:pointcut expression="execution(* com.kimi.spring_transation.Impl.AccountServiceImpl.*(..))" id="pointcut1"/>
		 配置切面 
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut1"/>
	</aop:config>
	 -->
	<!-- 2.2  通过AspectJ 注解配置方式 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>